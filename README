########################################################################
# module     : CPU Simulator
# author     : Andrew Walsh (awalsh128@gmail.com)
# file       : Readme
# date       : 06/04/2011
########################################################################

==[ Summary ]===========================================================

This program will demonstrate a generic single-cycle CPU based on MIPS
assembly code.

==[ Files ]=============================================================

README      	This file.
Makefile       	Make file to build and clean source.
main.c	      	Main entry point file and single cycle CPU simulation.
alu.c			ALU functions.
alu.h			ALU functions header.
assembler.c		Machine code assembly functions.
assembler.h		Machine code assembly header.
control.c		Control unit functions.
control.h		Control unit header.
gate.c			Gate logic functions.
gate.h			Gate logic header.
gatedriver.c	Gate driver test functions.
gatedriver.h	Gate driver test header.
loader.c		Machine code loader function.
loader.h		Machine code loader header.
memory.c		Memory file accessor.
memory.h		Memory file accessor header.
mux.c			Multiplexer logic functions.
mux.h			Multiplexer logic header.
rcadder.c		Ripple carry adder logic functions.
rcadder.h		Ripple carry adder logic header.
regfileaccess.c	Register file access function.
regfileaccess.h	Register file access header.
signal.c		Signal type definitions and helper functions.
signal.h		Signal type definitions and helper functions header.

==[ How to Compile & Run ]==============================================

In order to build the executable and run from scratch.

make all
make clean
./cpusim test.asm

In order to remove the build and intermediate objects.

make spotless

==[ Caveats & Additional Information ]==================================

Make sure to supply an assembly file to the program so that is can
process it accordingly. Keep in mind that a halt instruction will
automatically terminate the assembler; ignoring all subsequent
instructions.

